*Lots*and*lots*and*lots*

- Make examples and test test test
- Write backends for WxWindows, Qt#, SWT and Windows.Forms
- Write unittests using the nunit package
- Switch to Nant files instead of Makefiles or premake
- Port to Microsoft Compact .Net Framework

Bugs:
=====
- The properties used in widget constructors can not be specified in the <part>
section of the widget
- Some combined properties are not handled correctly, e.g.: 
<property part-name="blocksize" name="increments">100,500</property>

Standard compliance:
====================
This section lists the tags that are not yet (fully) supported:
- meta
- template
- restructure
- condition (single events are supported)
- equal
- op
- action (call and properties are supported)
- when-true
- when-false
- by-default
- restructure
- listener

TODO for Widget support:
========================
	Gtk#:
		-Check whether all widgets can be dynamically loaded
		-GtkMozEmbed
		-GStreamer would be great if its API becomes more stable
		-Add and test properties
		-Add and test events
	WxWindows:
	   - Only some widgets are supported (e.g. Button, TextCtrl,...)
		- Only BoxSizer is supported for layout management 
	Qt#:
		everything
	Windows.Forms:
		everything

Interaction part:
=================
- Add support for .Net Remoting in the call element
- Add Support for WSDL UI creation

Experimental topics:
====================
- Write a Peer-generator: a program that loads the libraries
for a widget set and uses the reflection mechanism to generate
the vocabulary (*not the logic part*) for the widget set.
In theory it is possible to write such a vocabulary generator
and it would be very cool!

- Add an AutoConnect equivalent in uiml.net. 
See http://lumumba.luc.ac.be/kris/blogger/2003_11_02_archive.html#106772924487273858 for a short
explanation

- Add support for WSDL, XML-RPC and SOAP in the call element

- Emit code for behavioral conditions?

